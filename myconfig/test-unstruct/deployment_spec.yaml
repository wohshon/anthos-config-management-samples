apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: frontend
  annotations:
    configmanagement.gke.io/namespace-selector: dev-ns-selector
    configsync.gke.io/cluster-name-selector: cluster-1,cluster-2

  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  strategy: {}
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - image: docker.io/wohshon/frontend:latest
        name: frontend
        env:
        - name: BG
          value: "red"  
        - name: GREETINGS
          value: "Hello World!"
        - name: PORT
          value: "8080"
        - name: SERVICE1_A
          value: "http://service1-svc.default.svc.cluster.local:8080/svc1/api/v1/service1/a/"
        - name: SERVICE1_B
          value: "http://service1-svc.default.svc.cluster.local:8080/svc1/api/v1/service1/b"
        - name: SERVICE2_A
          value: "http://service2-svc.default.svc.cluster.local:8080/svc2/api/v1/service2/a/"
        - name: SERVICE2_B
          value: "http://service2-svc.default.svc.cluster.local:8080/svc2/api/v1/service2/b"
        - name: SERVICE3_A
          value: "http://service3-svc.default.svc.cluster.local:8080/svc3/api/v1/service3/a/"
        - name: SERVICE3_B
          value: "http://service3-svc.default.svc.cluster.local:8080/svc3/api/v1/service3/b"                 
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: hello-service
  annotations:
    configmanagement.gke.io/namespace-selector: dev-ns-selector
    configsync.gke.io/cluster-name-selector: cluster-1,cluster-2
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
